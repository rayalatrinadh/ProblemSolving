
//Time Complexity : O(N)
//Space Complexity : O(1)
//patter used : two pointer (slow pointer and fast pointer)

public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null)
        return false;
        ListNode slow = head;
        ListNode fast = head.next;

        while(fast != null && fast.next != null){
            if(slow == fast)
            return true;
        slow = slow.next;
        fast = fast.next.next;
        }
        return false;
    }
}
