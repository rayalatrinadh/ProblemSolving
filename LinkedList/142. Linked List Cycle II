/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {

        ListNode slow = head;
        ListNode fast = head;
        boolean isCycleExists = false;

        while( fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;

            if(slow == fast){
                isCycleExists = true;
                fast = head;
                break;
            }
        }

        if(!isCycleExists){
            return null;
        }
           while(slow != fast){
            fast = fast.next;
            slow = slow.next;
            }
        
        return fast;
    }
}
