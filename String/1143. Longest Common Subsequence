import java.util.Vector;
class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        
        int l1 = text1.length()-1;
        int l2 = text2.length()-1;
       int[][] dp = new int[l1+1][l2+1];

       for(int i = 0; i <= l1; i++){
           for(int j = 0; j <= l2; j++){
               dp[i][j] = -1;
           }
       }
        int ans = lcs(l1,l2,text1,text2,dp);
        return ans;
    }

    public int lcs(int i1, int i2,String text1, String text2, int[][] dp){

       if(i1 < 0 || i2 < 0)
       return 0;

 if(dp[i1][i2] != -1) return dp[i1][i2];

 if(text1.charAt(i1) == text2.charAt(i2))
    return 1+lcs(i1-1,i2-1,text1,text2,dp);
  return dp[i1][i2] = (int)Math.max(lcs(i1-1,i2,text1,text2,dp),lcs(i1,i2-1,text1,text2,dp));
       
    }
}
