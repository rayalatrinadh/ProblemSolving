Time Complexity : O(N)
Space Complexity : O(N)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        
        ArrayList<Integer> rightSideViewList = new ArrayList<>();

        if(root == null)
        return rightSideViewList;
        rightSideFunc(root,rightSideViewList,0);
        return rightSideViewList;
        
    }

    public static void rightSideFunc(TreeNode root,ArrayList<Integer> result, int level){
        if(root == null)
        return;

        if(level == result.size()){
            result.add(root.val);
        }

        rightSideFunc(root.right, result, level+1);
        rightSideFunc(root.left, result, level+1);

    }
}
