package problemSolving.trinadh.trees;


import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

class Node{
    int val;
    Node left, right;

    Node(int val){
        this.val = val;
        left = right = null;
    }
}
public class PreOrderIteration {


    public static ArrayList<Integer> preOrderTraverse(Node root){

        ArrayList<Integer> preOrder = new ArrayList<Integer>();
        if(root == null)
            return preOrder;

        Stack<Node> s = new Stack<>();
        s.push(root);

        while(!s.isEmpty()){
            Node topNode = s.pop();
            preOrder.add(topNode.val);

            if(topNode.right != null)
                s.push(topNode.right);
            if(topNode.left != null)
                s.push(topNode.left);

        }


        return preOrder;
    }
    public static void main(String args[]){
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.left.right.left = new Node(8);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        root.right.right.left = new Node(9);
        root.right.right.right = new Node(10);

        ArrayList<Integer> preOrder = new ArrayList<>();
        preOrder = preOrderTraverse(root);

        System.out.println("The preOrder Traversal is : ");
        for(int i = 0; i < preOrder.size(); i++){
            System.out.print(preOrder.get(i) +  " ");
        }

    }

}
